trigger:
- main

pool:
  name: LocalWindows  # Your self-hosted agent name

variables:
- group: SonarQube
- name: SONARQUBE_PROJECT_KEY
  value: 'devops-pipeline-demo'
- name: SONARQUBE_PROJECT_NAME
  value: 'devops-pipeline-demo'
- name: SONARQUBE_HOST_URL
  value: 'http://localhost:9000'

steps:
- checkout: self

# 🔧 Gradle Build and SonarQube Analysis
- task: Gradle@2
  displayName: 'Gradle Build and SonarQube Analysis'
  inputs:
    gradleWrapperFile: 'src/gradlew.bat'
    workingDirectory: 'src'
    tasks: 'build sonarqube'
    options: >
      -Dsonar.projectKey=$(SONARQUBE_PROJECT_KEY)
      -Dsonar.projectName=$(SONARQUBE_PROJECT_NAME)
      -Dsonar.host.url=$(SONARQUBE_HOST_URL)
      -Dsonar.token=$(SONARQUBE_TOKEN)

# 📄 Generate Code Coverage Report
- task: ReportGenerator@5
  displayName: 'Generate Coverage Report'
  inputs:
    reports: '**/build/reports/jacoco/test/*.xml'
    targetdir: 'coverage-report'
    reporttypes: 'Html'

# ⬆️ Publish the coverage report as pipeline artifact
- task: PublishBuildArtifacts@1
  displayName: 'Publish Coverage Report'
  inputs:
    pathToPublish: 'coverage-report'
    artifactName: 'CodeCoverageReport'

# 🐳 Build Docker image (from src/)
- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    containerRegistry: docker-hub-creds
    repository: 'striverr/devops-pipeline-demo'
    command: 'build'
    Dockerfile: 'src/Dockerfile'
    buildContext: 'src'
    tags: |
      latest
      $(Build.BuildId)

# 📤 Push Docker image to Docker Hub
- task: Docker@2
  displayName: 'Push Docker Image'
  inputs:
    containerRegistry: docker-hub-creds
    repository: 'striverr/devops-pipeline-demo'
    command: 'push'
    tags: |
      latest
      $(Build.BuildId)
